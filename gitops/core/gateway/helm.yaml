apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: envoy-gateway
  namespace: envoy-gateway-system
spec:
  interval: 5m
  type: oci
  url: oci://docker.io/envoyproxy/
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: envoy-gateway
  namespace: envoy-gateway-system
spec:
  interval: 10m
  releaseName: envoy-gateway
  timeout: 5m
  chart:
    spec:
      chart: gateway-helm # envoy-gateway
      version: "1.4.1"
      sourceRef:
        kind: HelmRepository
        name: envoy-gateway
        namespace: envoy-gateway-system
      interval: 5m
---
apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass
metadata:
  name: envoy
spec:
  controllerName: gateway.envoyproxy.io/gatewayclass-controller
  # parametersRef:
  #   group: gateway.envoyproxy.io
  #   kind: EnvoyProxy
  #   name: envoy-proxy
  #   namespace: envoy-gateway-system
# ---
# apiVersion: gateway.envoyproxy.io/v1alpha1
# kind: EnvoyProxy
# metadata:
#   name: envoy-proxy
#   namespace: envoy-gateway-system
# spec:
#   provider:
#     kubernetes:
#       envoyService:
#         annotations:
#           # // oracle cloud annotations
#           service.beta.kubernetes.io/oci-load-balancer-pip-name: "PublicIP"
#           service.beta.kubernetes.io/oci-load-balancer-resource-group: "default"
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: envoy-https
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-cloudflare"
    cert-manager.io/issue-temporary-certificate: "true"
spec:
  gatewayClassName: envoy
  listeners:
    - name: https
      protocol: HTTPS
      port: 443
      allowedRoutes:
        namespaces:
          from: All
      tls:
        # mode: Terminate
        certificateRefs:
          - kind: Secret
            name: juancarlosvaldes.com
            # namespace: default
---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: SecurityPolicy
metadata:
  name: envoy-gateway-https-cors
  namespace: default
spec:
  targetRefs:
    - group: gateway.networking.k8s.io
      kind: Gateway
      name: envoy-https
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: nginx-test
spec:
  parentRefs:
    - name: envoy-https
  hostnames:
    - "nginx.juancarlosvaldes.com"
  rules:
    - matches:
        - path:
            type: PathPrefix
            value: /
      backendRefs:
        - kind: Service
          name: nginx-test
          port: 80
          weight: 1
